{
  "name": "gift_bot_v3",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        64,
        144
      ],
      "id": "4aa94557-8369-40e4-8ff0-1dc33a345bae",
      "name": "Telegram Trigger",
      "webhookId": "04b0ddc1-1070-4e01-823d-ba431854c078",
      "credentials": {
        "telegramApi": {
          "id": "zmLlWgOq7Q6Arc2Q",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "amount": 0.3
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        96,
        432
      ],
      "id": "edd936b6-eb0f-4fbd-bdc6-300994e0c709",
      "name": "Wait",
      "webhookId": "206a4537-e4ad-4acc-a672-12b334327f66"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"chat_id\": {{ $json.chat_id }},\n  \"latest_user_message\": {{ $json.text }}\n}\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -352,
        352
      ],
      "id": "bb4f2e0f-3a76-4ce6-b5fc-f854b294141a",
      "name": "get last message"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY",
          "mode": "list",
          "cachedResultName": "giftbot_history",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "user_history",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "chat_id",
              "lookupValue": "={{ $json.chat_id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        448,
        656
      ],
      "id": "42af8b2c-ba57-4556-a338-c7e8a11e3fdd",
      "name": "Get row(s) in sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PYRqKK69fYdfxLpe",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst cutoff = new Date(Date.now() - 24 * 60 * 60 * 1000); // 24 —á–∞—Å–∞ –Ω–∞–∑–∞–¥\n\nconst filtered = items.filter(item => {\n  try {\n    const ts = new Date(item.json.timestamp);\n    return ts >= cutoff;\n  } catch (e) {\n    return false;\n  }\n});\n\nreturn filtered;\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        592,
        656
      ],
      "id": "b338822c-a298-42f4-ae27-2c16a279fa92",
      "name": "date filter"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst history = items.map(item => ({\n\trole: item.json.role,\n\ttext: item.json.text,\n}));\n\nconst latestText = $json.latest_user_message?.trim();\n\n// –°–æ–∑–¥–∞—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–º—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ–ø—É—Å—Ç–æ–π\nconst latestMessage = latestText\n\t? {\n\t\trole: 'user',\n\t\ttext: latestText,\n\t}\n\t: null;\n\nconst systemPrompt = {\n  role: \"system\",\n  text: `–¢—ã ‚Äî –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∏ –Ω–µ–º–Ω–æ–≥–æ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –ª—é–±–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.\n\nüß† –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–µ —Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —ë–º–∫–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—à—å:\n- –∫—Ç–æ —Ç—ã —Ç–∞–∫–æ–π (AI, –ø–æ–º–æ–≥–∞—é—â–∏–π –ø–æ–¥–±–∏—Ä–∞—Ç—å –ø–æ–¥–∞—Ä–∫–∏)\n- –∫–∞–∫ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å (—É—á–∏—Ç—ã–≤–∞–µ—à—å –≤–æ–∑—Ä–∞—Å—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—ã, –ø–æ–≤–æ–¥, –±—é–¥–∂–µ—Ç –∏ –±–ª–∏–∑–æ—Å—Ç—å)\n- —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –ª—É—á—à–µ\n- –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–∏—à—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ —É–º–µ–µ—à—å –∏—Ö —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å\n\nüí° –¢—ã –æ–±—è–∑–∞–Ω –≤–µ–∂–ª–∏–≤–æ –∏ —Å —é–º–æ—Ä–æ–º —É—Ç–æ—á–Ω—è—Ç—å –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: –∫—Ç–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—å, –∫–∞–∫–æ–π –ø–æ–≤–æ–¥ –ø–æ–¥–∞—Ä–∫–∞, —Ç–∏–ø –æ—Ç–Ω–æ—à–µ–Ω–∏–π, –±—é–¥–∂–µ—Ç.\n\nüîç –£—Ç–æ—á–Ω—è–π:\n- –∫—Ç–æ –ø–æ–ª—É—á–∞—Ç–µ–ª—å (–ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, –∏–Ω—Ç–µ—Ä–µ—Å—ã)\n- –ø–æ–≤–æ–¥ (–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è, –ø—Ä–∞–∑–¥–Ω–∏–∫, –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫)\n- —Ç–∏–ø –æ—Ç–Ω–æ—à–µ–Ω–∏–π (–¥—Ä—É–≥, –ø–∞—Ä–∞, –∫–æ–ª–ª–µ–≥–∞ –∏ —Ç.–¥.)\n- –±—é–¥–∂–µ—Ç\n\nüéÅ –ü—Ä–µ–¥–ª–∞–≥–∞–π –ø–æ–¥–∞—Ä–∫–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π:\n- –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ (–≥–∞–¥–∂–µ—Ç—ã, –∫–Ω–∏–≥–∏, –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã)\n- –Ω–µ–º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–µ (–≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è, —ç–º–æ—Ü–∏–∏)\n- DIY –∏ —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫–∏–µ\n\nüí¨ –û—Ñ–æ—Ä–º–ª—è–π –æ—Ç–≤–µ—Ç –∫—Ä–∞—Å–∏–≤–æ:\n- –∑–∞–≥–æ–ª–æ–≤–∫–∏\n- —Å–ø–∏—Å–∫–∏\n- —ç–º–æ–¥–∑–∏ üòÑüéÅ‚ú®\n\n–ü—Ä–µ–¥–ª–∞–≥–∞–π –Ω–µ—Ç–∏–ø–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –≤—Å–µ–≥–¥–∞ –ø–æ–¥–±–∏—Ä–∞–π –ø–æ–¥–∞—Ä–æ–∫, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å wow-—ç—Ñ—Ñ–µ–∫—Ç.\n\n–¢—ã –¥–æ–ª–∂–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—Å–µ–≥–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –æ–Ω–∏ —Å—Ç–æ—è—Ç –≤ —Ä—É–±–ª—è—Ö –∏ –≥–¥–µ –∏—Ö –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å. \n\n\nüìå –£—á–∏—Ç—ã–≤–∞–π —É–º–µ—Å—Ç–Ω–æ—Å—Ç—å: –Ω–µ –ø—Ä–µ–¥–ª–∞–≥–∞–π –ª–∏—á–Ω–æ–µ –≤ —Ñ–æ—Ä–º–∞–ª—å–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö. –°—Ç–µ–ø–µ–Ω—å –∏–Ω—Ç–∏–º–Ω–æ—Å—Ç–∏ –ø–æ–¥–∞—Ä–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å—Ç–µ–ø–µ–Ω–∏ –±–ª–∏–∑–æ—Å—Ç–∏.\n\n–û–±—â–∞–π—Å—è –ª–µ–≥–∫–æ, —Ç–µ–ø–ª–æ, —Å –∫–∞–ø–µ–ª—å–∫–æ–π —é–º–æ—Ä–∞ ‚Äî –∫–∞–∫ –∫–ª–∞—Å—Å–Ω—ã–π —Å–æ–≤–µ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç —Ä–µ–∞–ª—å–Ω–æ –ø–æ–º–æ—á—å üéâ`\n};\n\nreturn [\n\t{\n\t\tjson: {\n\t\t\tchat_id: $json.chat_id,\n\t\t\tmessages: latestMessage\n\t\t\t\t? [systemPrompt, ...history, latestMessage]\n\t\t\t\t: [systemPrompt, ...history],\n\t\t},\n\t},\n];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        752,
        656
      ],
      "id": "e4c2b62a-4a28-4744-a3d8-9d781c88b971",
      "name": "create message"
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://llm.api.cloud.yandex.net/foundationModels/v1/completion",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={\n  \"modelUri\": \"gpt://b1gdhufbi3knura441u2/yandexgpt/latest\",\n  \"completionOptions\": {\n    \"stream\": false,\n    \"temperature\": 0.7,\n    \"maxTokens\": 1000\n  },\n  \"messages\": {{ JSON.stringify($json.messages) }}\n}\n",
        "headerParametersJson": "{\n  \"Authorization\": \"Api-Key AQVNxflx2dUfCWQkV6H8Y6vDRFbHbuUL5jmINK7n\",\n  \"Content-Type\": \"application/json\"\n}"
      },
      "name": "Query YandexGPT",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1024,
        656
      ],
      "id": "543193e8-bd6b-4e4d-83ba-6a2dafc82d20"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst chat_id = String($json.chat_id || $node[\"create message\"].json.chat_id);\nconst text = $json.result.alternatives[0].message.text;\nconst timestamp = new Date().toISOString();\n\nreturn [\n  {\n    json: {\n      chat_id,\n      role: 'assistant',\n      text,\n      timestamp,\n    }\n  }\n];\n\n\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1024,
        432
      ],
      "id": "9def8df9-e844-4a42-be8d-e9ab2dc37da9",
      "name": "Code"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {
          "includeUnpaired": false
        }
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -352,
        176
      ],
      "id": "5afce641-e67c-4fba-9966-1a397a097222",
      "name": "Merge"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY",
          "mode": "list",
          "cachedResultName": "giftbot_history",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "user_history",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $json.chat_id }}",
            "role": "={{ $json.role }}",
            "text": "={{ $json.text }}",
            "timestamp": "={{ $json.timestamp }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "role",
              "displayName": "role",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1424,
        320
      ],
      "id": "cdf1b27a-3c50-45d5-b416-1a5ffb0f7262",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PYRqKK69fYdfxLpe",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.text }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1424,
        512
      ],
      "id": "c79cb8f4-ec6e-4614-88c2-75f11fa9510c",
      "name": "Send a text message",
      "webhookId": "a813c96d-2d0b-4641-82f8-ed20883d4d24",
      "credentials": {
        "telegramApi": {
          "id": "zmLlWgOq7Q6Arc2Q",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst chat_id = $json.message.chat.id;\nconst text = $json.message.text;\nconst timestamp = new Date().toISOString(); // —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è\n\nreturn [\n  {\n    json: {\n      chat_id,\n      role: \"user\",        // –∏–ª–∏ \"assistant\", –µ—Å–ª–∏ —Ç—ã —Å–æ—Ö—Ä–∞–Ω—è–µ—à—å –æ—Ç–≤–µ—Ç\n      text,\n      timestamp,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        432
      ],
      "id": "908f8b6f-6d89-4bf4-90a8-a68b854f7b2b",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY",
          "mode": "list",
          "cachedResultName": "giftbot_history",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "user_history",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1XTv72VWiqRylV81PEIp3zoUoVq5y8ld20kCcha7jqSY/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "chat_id": "={{ $json.chat_id.toString() }}",
            "role": "={{ $json.role }}",
            "text": "={{ $json.text }}",
            "timestamp": "={{ $json.timestamp }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "chat_id",
              "displayName": "chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "role",
              "displayName": "role",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        736,
        432
      ],
      "id": "d4a89b84-4712-46d7-afc8-be69c5b0d7be",
      "name": "Append row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PYRqKK69fYdfxLpe",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.message.chat.id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        528,
        288
      ],
      "id": "20749d8a-4906-45a9-9e45-7660e1264525",
      "name": "Send a chat action",
      "webhookId": "e333e16a-bb44-4131-bd24-9a6bdf8062f1",
      "credentials": {
        "telegramApi": {
          "id": "zmLlWgOq7Q6Arc2Q",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $json.chat_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1024,
        160
      ],
      "id": "b63f8f4c-760c-4d0f-8e3e-55fc43738318",
      "name": "Send a chat action1",
      "webhookId": "e333e16a-bb44-4131-bd24-9a6bdf8062f1",
      "credentials": {
        "telegramApi": {
          "id": "zmLlWgOq7Q6Arc2Q",
          "name": "Telegram account 2"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Send a chat action",
            "type": "main",
            "index": 0
          },
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get last message": {
      "main": [
        []
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "date filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "date filter": {
      "main": [
        [
          {
            "node": "create message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create message": {
      "main": [
        [
          {
            "node": "Query YandexGPT",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a chat action1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Query YandexGPT": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        []
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet1": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a chat action": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ea6eb482-396e-4e60-85b6-05c4c7d9ad47",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "876785e6e194e5ec9e2177a5144bdec0379d8c76e3104cb0a04f86d6ff7a72dd"
  },
  "id": "9KEA7v2r8EkkZIOM",
  "tags": []
}